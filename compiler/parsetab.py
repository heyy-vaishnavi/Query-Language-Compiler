
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALSAND ASTERISK AVG COMMA COUNT DESC EQUALS FROM GREATEREQUAL GREATERTHAN IDENTIFIER LESSEQUAL LESSTHAN LIMIT LPAREN MAX MIN NOTEQUALS NUMBER OR ORDERBY RPAREN SELECT STRING SUM WHEREquery : SELECT select_list FROM IDENTIFIER where_clause orderby_clause limit_clausecolumn_list : column_list COMMA IDENTIFIERcolumn_list : IDENTIFIERwhere_clause : WHERE condition\n| select_list : ASTERISKselect_list : column_listselect_list : aggregate_functionaggregate_function : COUNT LPAREN ASTERISK RPAREN\n| COUNT LPAREN IDENTIFIER RPAREN\n| SUM LPAREN IDENTIFIER RPAREN\n| AVG LPAREN IDENTIFIER RPAREN\n| MIN LPAREN IDENTIFIER RPAREN\n| MAX LPAREN IDENTIFIER RPARENcondition : condition AND condition\n| condition OR conditioncondition : IDENTIFIER comparison_operator valuecomparison_operator : EQUALS\n| NOTEQUALS\n| LESSTHAN\n| LESSEQUAL\n| GREATERTHAN\n| GREATEREQUALvalue : NUMBER\n| STRING\n| LPAREN query RPARENorderby_clause : ORDERBY IDENTIFIER\n| ORDERBY IDENTIFIER DESC\n| limit_clause : LIMIT NUMBER\n| '
    
_lr_action_items = {'SELECT':([0,59,],[2,2,]),'$end':([1,20,28,36,38,40,42,52,53,54,55,56,57,58,61,],[0,-5,-29,-31,-4,-1,-27,-30,-28,-15,-16,-17,-24,-25,-26,]),'ASTERISK':([2,15,],[5,22,]),'IDENTIFIER':([2,13,14,15,16,17,18,19,29,37,43,44,],[4,20,21,23,24,25,26,27,39,42,39,39,]),'COUNT':([2,],[8,]),'SUM':([2,],[9,]),'AVG':([2,],[10,]),'MIN':([2,],[11,]),'MAX':([2,],[12,]),'FROM':([3,4,5,6,7,21,30,31,32,33,34,35,],[13,-3,-6,-7,-8,-2,-9,-10,-11,-12,-13,-14,]),'COMMA':([4,6,21,],[-3,14,-2,]),'LPAREN':([8,9,10,11,12,45,46,47,48,49,50,51,],[15,16,17,18,19,59,-18,-19,-20,-21,-22,-23,]),'WHERE':([20,],[29,]),'ORDERBY':([20,28,38,54,55,56,57,58,61,],[-5,37,-4,-15,-16,-17,-24,-25,-26,]),'LIMIT':([20,28,36,38,42,53,54,55,56,57,58,61,],[-5,-29,41,-4,-27,-28,-15,-16,-17,-24,-25,-26,]),'RPAREN':([20,22,23,24,25,26,27,28,36,38,40,42,52,53,54,55,56,57,58,60,61,],[-5,30,31,32,33,34,35,-29,-31,-4,-1,-27,-30,-28,-15,-16,-17,-24,-25,61,-26,]),'AND':([38,54,55,56,57,58,61,],[43,43,43,-17,-24,-25,-26,]),'OR':([38,54,55,56,57,58,61,],[44,44,44,-17,-24,-25,-26,]),'EQUALS':([39,],[46,]),'NOTEQUALS':([39,],[47,]),'LESSTHAN':([39,],[48,]),'LESSEQUAL':([39,],[49,]),'GREATERTHAN':([39,],[50,]),'GREATEREQUAL':([39,],[51,]),'NUMBER':([41,45,46,47,48,49,50,51,],[52,57,-18,-19,-20,-21,-22,-23,]),'DESC':([42,],[53,]),'STRING':([45,46,47,48,49,50,51,],[58,-18,-19,-20,-21,-22,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,59,],[1,60,]),'select_list':([2,],[3,]),'column_list':([2,],[6,]),'aggregate_function':([2,],[7,]),'where_clause':([20,],[28,]),'orderby_clause':([28,],[36,]),'condition':([29,43,44,],[38,54,55,]),'limit_clause':([36,],[40,]),'comparison_operator':([39,],[45,]),'value':([45,],[56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> SELECT select_list FROM IDENTIFIER where_clause orderby_clause limit_clause','query',7,'p_query','parser.py',10),
  ('column_list -> column_list COMMA IDENTIFIER','column_list',3,'p_column_list_multiple','parser.py',22),
  ('column_list -> IDENTIFIER','column_list',1,'p_column_list_single','parser.py',26),
  ('where_clause -> WHERE condition','where_clause',2,'p_where_clause','parser.py',30),
  ('where_clause -> <empty>','where_clause',0,'p_where_clause','parser.py',31),
  ('select_list -> ASTERISK','select_list',1,'p_select_list_all','parser.py',35),
  ('select_list -> column_list','select_list',1,'p_select_list_columns','parser.py',39),
  ('select_list -> aggregate_function','select_list',1,'p_select_list_agg_func','parser.py',43),
  ('aggregate_function -> COUNT LPAREN ASTERISK RPAREN','aggregate_function',4,'p_aggregate_function','parser.py',47),
  ('aggregate_function -> COUNT LPAREN IDENTIFIER RPAREN','aggregate_function',4,'p_aggregate_function','parser.py',48),
  ('aggregate_function -> SUM LPAREN IDENTIFIER RPAREN','aggregate_function',4,'p_aggregate_function','parser.py',49),
  ('aggregate_function -> AVG LPAREN IDENTIFIER RPAREN','aggregate_function',4,'p_aggregate_function','parser.py',50),
  ('aggregate_function -> MIN LPAREN IDENTIFIER RPAREN','aggregate_function',4,'p_aggregate_function','parser.py',51),
  ('aggregate_function -> MAX LPAREN IDENTIFIER RPAREN','aggregate_function',4,'p_aggregate_function','parser.py',52),
  ('condition -> condition AND condition','condition',3,'p_condition_logic','parser.py',56),
  ('condition -> condition OR condition','condition',3,'p_condition_logic','parser.py',57),
  ('condition -> IDENTIFIER comparison_operator value','condition',3,'p_condition_comparison','parser.py',61),
  ('comparison_operator -> EQUALS','comparison_operator',1,'p_comparison_operator','parser.py',65),
  ('comparison_operator -> NOTEQUALS','comparison_operator',1,'p_comparison_operator','parser.py',66),
  ('comparison_operator -> LESSTHAN','comparison_operator',1,'p_comparison_operator','parser.py',67),
  ('comparison_operator -> LESSEQUAL','comparison_operator',1,'p_comparison_operator','parser.py',68),
  ('comparison_operator -> GREATERTHAN','comparison_operator',1,'p_comparison_operator','parser.py',69),
  ('comparison_operator -> GREATEREQUAL','comparison_operator',1,'p_comparison_operator','parser.py',70),
  ('value -> NUMBER','value',1,'p_value','parser.py',74),
  ('value -> STRING','value',1,'p_value','parser.py',75),
  ('value -> LPAREN query RPAREN','value',3,'p_value','parser.py',76),
  ('orderby_clause -> ORDERBY IDENTIFIER','orderby_clause',2,'p_orderby_clause','parser.py',81),
  ('orderby_clause -> ORDERBY IDENTIFIER DESC','orderby_clause',3,'p_orderby_clause','parser.py',82),
  ('orderby_clause -> <empty>','orderby_clause',0,'p_orderby_clause','parser.py',83),
  ('limit_clause -> LIMIT NUMBER','limit_clause',2,'p_limit_clause','parser.py',92),
  ('limit_clause -> <empty>','limit_clause',0,'p_limit_clause','parser.py',93),
]
